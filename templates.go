package handlers

import (
	"encoding/json"
	"log"
	"net/http"

	"github.com/SecurityWaffle/pentest-tracker/pkg/db"
	"github.com/SecurityWaffle/pentest-tracker/pkg/models"
)

func GetReportTemplatesHandler(w http.ResponseWriter, r *http.Request) {
	rows, err := db.DB.Query(`SELECT id, name, content FROM report_templates`)
	if err != nil {
		log.Printf("Error querying report templates: %v", err)
		http.Error(w, "Internal Server Error", http.StatusInternalServerError)
		return
	}
	defer rows.Close()

	templates := []models.ReportTemplate{}
	for rows.Next() {
		var template models.ReportTemplate
		if err := rows.Scan(&template.ID, &template.Name, &template.Content); err != nil {
			log.Printf("Error scanning report template: %v", err)
			http.Error(w, "Internal Server Error", http.StatusInternalServerError)
			return
		}
		templates = append(templates, template)
	}

	w.Header().Set("Content-Type", "application/json")
	json.NewEncoder(w).Encode(templates)
}

func CreateOrUpdateReportTemplateHandler(w http.ResponseWriter, r *http.Request) {
	var template models.ReportTemplate
	err := json.NewDecoder(r.Body).Decode(&template)
	if err != nil {
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}

	if template.ID != 0 {
		_, err = db.DB.Exec(`UPDATE report_templates SET name = $1, content = $2 WHERE id = $3`,
			template.Name, template.Content, template.ID)
	} else {
		_, err = db.DB.Exec(`INSERT INTO report_templates (name, content) VALUES ($1, $2)`,
			template.Name, template.Content)
	}

	if err != nil {
		log.Printf("Error saving report template: %v", err)
		http.Error(w, "Internal Server Error", http.StatusInternalServerError)
		return
	}

	w.WriteHeader(http.StatusOK)
}

func DeleteReportTemplateHandler(w http.ResponseWriter, r *http.Request) {
	templateID := r.URL.Query().Get("id")
	if templateID == "" {
		http.Error(w, "Missing template ID", http.StatusBadRequest)
		return
	}

	_, err := db.DB.Exec(`DELETE FROM report_templates WHERE id = $1`, templateID)
	if err != nil {
		log.Printf("Error deleting report template: %v", err)
		http.Error(w, "Internal Server Error", http.StatusInternalServerError)
		return
	}

	w.WriteHeader(http.StatusOK)
}
