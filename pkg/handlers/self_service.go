package handlers

import (
	"html/template"
	"log"
	"net/http"

	"github.com/SecurityWaffle/pentest-tracker/pkg/db"
	"github.com/SecurityWaffle/pentest-tracker/pkg/models"
)

func RequestPentestHandler(w http.ResponseWriter, r *http.Request) {
	if r.Method == http.MethodGet {
		tmpl := template.Must(template.ParseFiles("web/templates/layout.html", "web/templates/request_pentest.html"))
		if err := tmpl.ExecuteTemplate(w, "layout", nil); err != nil {
			http.Error(w, "Internal Server Error", http.StatusInternalServerError)
		}
		return
	}

	if r.Method == http.MethodPost {
		pentestRequest := &models.Pentest{
			Name:        r.FormValue("name"),
			Description: r.FormValue("description"),
			Status:      "Requested",
			StartDate:   r.FormValue("start_date"),
			EndDate:     r.FormValue("end_date"),
		}

		if err := db.CreatePentest(pentestRequest); err != nil {
			log.Printf("Error creating pentest request: %v", err)
			http.Error(w, "Internal Server Error", http.StatusInternalServerError)
			return
		}

		http.Redirect(w, r, "/self_service/requests", http.StatusSeeOther)
	}
}

func ListPentestRequestsHandler(w http.ResponseWriter, r *http.Request) {
	requests, err := db.GetPentestRequests()
	if err != nil {
		log.Printf("Error retrieving pentest requests: %v", err)
		http.Error(w, "Internal Server Error", http.StatusInternalServerError)
		return
	}

	tmpl := template.Must(template.ParseFiles("web/templates/layout.html", "web/templates/pentest_requests.html"))
	if err := tmpl.ExecuteTemplate(w, "layout", requests); err != nil {
		http.Error(w, "Internal Server Error", http.StatusInternalServerError)
	}
}
