package handlers

import (
	"html/template"
	"log"
	"net/http"
	"strings"

	"github.com/SecurityWaffle/pentest-tracker/pkg/db"
	"github.com/SecurityWaffle/pentest-tracker/pkg/models"
)

func CreateRoleHandler(w http.ResponseWriter, r *http.Request) {
	if r.Method == http.MethodGet {
		tmpl := template.Must(template.ParseFiles("web/templates/layout.html", "web/templates/role_form.html"))
		if err := tmpl.ExecuteTemplate(w, "layout", nil); err != nil {
			http.Error(w, "Internal Server Error", http.StatusInternalServerError)
		}
		return
	}

	if r.Method == http.MethodPost {
		role := &models.Role{
			Name:        r.FormValue("name"),
			Permissions: strings.Split(r.FormValue("permissions"), ","),
		}

		if err := db.CreateRole(role); err != nil {
			log.Printf("Error creating role: %v", err)
			http.Error(w, "Internal Server Error", http.StatusInternalServerError)
			return
		}

		http.Redirect(w, r, "/admin/roles", http.StatusSeeOther)
	}
}

func ListRolesHandler(w http.ResponseWriter, r *http.Request) {
	roles, err := db.GetAllRoles()
	if err != nil {
		log.Printf("Error retrieving roles: %v", err)
		http.Error(w, "Internal Server Error", http.StatusInternalServerError)
		return
	}

	tmpl := template.Must(template.ParseFiles("web/templates/layout.html", "web/templates/roles_list.html"))
	if err := tmpl.ExecuteTemplate(w, "layout", roles); err != nil {
		http.Error(w, "Internal Server Error", http.StatusInternalServerError)
	}
}
